entities:
- name: service
  namespace: laplacian.arch.api.service
  properties:
  - name: name
    type: string
    primary_key: true

  - name: version
    type: string

  - name: namespace
    type: string
    domain_type_name: namespace
    optional: true
    default_value: |
      "${_context.get("project.namespace")}.service.${name.lowerUnderscorize()}"

  - name: description
    type: string
    optional: true
    default_value: |
      name

  - name: depends_on_elasticsearch
    type: boolean
    snippet: |
      elasticsearchIndexes.isNotEmpty()

  - name: depends_on_cache
    type: boolean
    snippet: |
      restResourcesBackingGraphqlType.any {
          it.cachePolicy != null || it.operations.any{ it.cachePolicy != null }
      }

  - name: depends_on_redis_cache
    type: boolean
    snippet: |
      restResourcesBackingGraphqlType.any {
          it.cachePolicy?.storeType == "redis" ?: false ||
          it.operations.any{ it.cachePolicy?.storeType == "redis" ?: false }
      }

  - name: depends_on_mybatis
    type: boolean
    snippet: |
      graphqlTypesBackedByRdbmsTable.any { it.mybatisMappers.isNotEmpty() }

  - name: depends_on_postgres_jdbc
    type: boolean
    snippet: |
      datasources.any { it.type == "postgres_jdbc" }

  - name: depends_on_oracle_jdbc
    type: boolean
    snippet: |
      datasources.any { it.type == "oracle_jdbc" }

  relationships:
  - name: datasource_entries
    cardinality: '*'
    reference_entity_name: datasource_entry
    reference_entity_namespace: laplacian.arch.api.service.datasource
    aggregate: true

  - name: datasources
    cardinality: '*'
    reference_entity_name: datasource
    reference_entity_namespace: laplacian.arch.api.service.datasource
    snippet: |
      datasourceEntries.map{ it.datasource }

  - name: graphql_type_entries
    cardinality: '*'
    reference_entity_name: graphql_type_entry
    aggregate: true

  - name: graphql_types
    cardinality: '*'
    reference_entity_name: graphql_type
    reference_entity_namespace: laplacian.arch.api.service.graphql
    snippet: |
      graphqlTypeEntries.map{ it.graphqlType }.distinct()

  - name: graphql_types_backed_by_external_rest_resource
    cardinality: '*'
    reference_entity_name: external_rest_resource
    reference_entity_namespace: laplacian.arch.api.service.graphql
    snippet: |
      graphqlTypes.map{ it as? ExternalRestResource }.filterNotNull()

  - name: rest_resources_backing_graphql_type
    cardinality: '*'
    reference_entity_name: rest_resource
    reference_entity_namespace: laplacian.arch.api.service.rest
    snippet: |
      graphqlTypesBackedByExternalRestResource
      .map{ it.restResource }
      .distinct()

  - name: graphql_types_backed_by_indexed_document
    cardinality: '*'
    reference_entity_name: indexed_document
    reference_entity_namespace: laplacian.arch.api.service.graphql
    snippet: |
      graphqlTypes.map{ it as? IndexedDocument }.filterNotNull()

  - name: graphql_types_backed_by_rdbms_table
    cardinality: '*'
    reference_entity_name: rdbms_table
    reference_entity_namespace: laplacian.arch.api.service.graphql
    snippet: |
      graphqlTypes.filterIsInstance<RdbmsTable>()

  - name: graphql_types_backed_by_static_data
    cardinality: '*'
    reference_entity_name: static_data
    reference_entity_namespace: laplacian.arch.api.service.graphql
    snippet: |
      graphqlTypes.filterIsInstance<StaticData>()

  - name: elastic_search_clients
    reference_entity_name: elastic_search_client
    cardinality: '*'
    aggregate: true

  - name: elasticsearch_indexes
    reference_entity_name: elasticsearch_index
    reference_entity_namespace: laplacian.arch.api.service.elasticsearch
    cardinality: '*'
    snippet: |
      graphqlTypesBackedByIndexedDocument.map{ it.elasticsearchIndex }
      .distinct()

  - name: graphql_type_relationships
    reference_entity_name: graphql_type_relationship
    reference_entity_namespace: laplacian.arch.api.service.graphql
    cardinality: '*'
    snippet: |
      graphqlTypes.map{ it.relationships }.flatten().distinct()

  - name: configuration_categories
    reference_entity_name: service_configuration_category
    cardinality: '*'
    aggregate: true

  - name: cache_policies
    reference_entity_name: cache_policy
    reference_entity_namespace: laplacian.arch.api.service.cache
    cardinality: '*'
    snippet: |
      (
          restResourcesBackingGraphqlType.map{ it.cachePolicy } +
          restResourcesBackingGraphqlType.flatMap{ it.operations.map{ it.cachePolicy }}
      )
      .filterNotNull()
      .distinct()
